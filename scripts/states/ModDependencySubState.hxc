import funkin.audio.FunkinSound;
import funkin.modding.PolymodHandler;
import funkin.modding.base.ScriptedMusicBeatSubState;
import funkin.ui.mainmenu.MainMenuState;
import funkin.util.WindowUtil;
import funkin.input.Controls;

import flixel.FlxG;
import flixel.FlxSprite;
import flixel.addons.transition.FlxTransitionableState;
import flixel.text.FlxText;
import flixel.tweens.FlxEase;
import flixel.tweens.FlxTween;
import flixel.util.FlxGradient;
import flixel.util.FlxTimer;

class ModDependencySubState extends ScriptedMusicBeatSubState {

  var missingDependencies = [];
  var missingDependenciesURLS = [];
  var allowedToOpenLink = false;

  public function new(?args = []) {
		super("ModDependencySubState");
    missingDependencies = args[0];
    missingDependenciesURLS = args[1];
	}

  override public function create():Void {
		super.create();
    trace(missingDependencies);
    trace(missingDependenciesURLS);

    var colorBg:FlxSprite = new FlxSprite(0, 0);
    colorBg.makeGraphic(FlxG.width, FlxG.height, 0xff000000);
    colorBg.alpha = 0;
    FlxTween.tween(colorBg, {alpha: 0.5}, 2, {ease: FlxEase.expoOut});
    add(colorBg);

    var text:FlxText = new FlxText(0, 0, 960, "This mod is missing dependencies:\n" + missingDependencies.join(", ") + "\nPress ENTER to open the link for the dependencies, or BACK to close this warning.", 16);
    text.alignment = "center";
    text.screenCenter();
    FlxTween.tween(text, {alpha: 0.75}, 3, {type: 4, ease: FlxEase.sineInOut});

    var textUnderlay:FlxSprite = new FlxSprite(text.x - 25, text.y - 25).makeGraphic(text.width + 25, text.height + 25, 0xff000000);
    textUnderlay.alpha = 0.75;
    textUnderlay.screenCenter();

    add(textUnderlay);
    add(text);
    new FlxTimer().start(0.1, ()->{ allowedToOpenLink = true; });
  }

  override function update(elapsed:Float):Void
  {
    super.update(elapsed);
		if (controls.BACK)
    {
      FlxG.sound.play(Paths.sound("cancelMenu"));
      close();
    }
    if (controls.ACCEPT)
    {
      if(allowedToOpenLink)
      {
        for(link in 0...missingDependenciesURLS.length)
          WindowUtil.openURL(missingDependenciesURLS[link]);
      }
    }
  }
}
