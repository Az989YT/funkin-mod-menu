import funkin.audio.FunkinSound;
import funkin.graphics.ScriptedFunkinSprite;
import funkin.graphics.shaders.AdjustColorShader;
import funkin.modding.base.ScriptedFlxSpriteGroup;
import funkin.modding.module.ModuleHandler;
import funkin.ui.ScriptedMusicBeatState;
import funkin.ui.ScriptedMusicBeatSubState;
import funkin.ui.mainmenu.MainMenuState;
import funkin.util.Constants;
import funkin.util.HapticUtil;
import funkin.util.SwipeUtil;
import funkin.util.TouchUtil;
import funkin.util.tools.ArrayTools;

import flixel.FlxCamera;
import flixel.FlxG;
import flixel.FlxSprite;
import flixel.addons.display.FlxTiledSprite;
import flixel.addons.transition.FlxTransitionableState;
import flixel.addons.transition.TransitionData;
import flixel.group.FlxTypedSpriteGroup;
import flixel.math.FlxPoint;
import flixel.math.FlxMath;
import flixel.tweens.FlxEase;
import flixel.tweens.FlxTween;
import flixel.util.FlxTimer;

class ModMenuState extends ScriptedMusicBeatState
{
    var ModMenuUtils = ModuleHandler.getModule("ModMenuUtils");

    var modsMap:Map = [
        "mod-id" => "modCase"
    ];
    var curSelected = 0;

    var swirlBig:FlxSprite;
    var swirlMini:FlxSprite;
    var modCasesGroup:FlxTypedSpriteGroup;
    var characterPortrait:FunkinSprite;
    var poofSprite:FlxSprite;

    var scrollingElementsTop:FlxTiledSprite;
    var scrollingElementsMiddle:FlxTiledSprite;
    var scrollingElementsBottom:FlxTiledSprite;

	public function new()
    {
		super("ModMenuState");
	}

    override public function create():Void
    {
        super.create();

        this.persistentUpdate = true;
        this.persistentDraw = true;
        MainMenuState.rememberedSelectedIndex = 0;

        FlxG.sound.cache(Paths.music('exploration/exploration'));
        FunkinSound.playMusic('exploration',
        {
            startingVolume: 0.0,
            overrideExisting: true,
            restartTrack: false,
            persist: false
        });
        FlxG.sound.music.fadeIn(2, 0, 0.5);

        var colorBg:FlxSprite = new FlxSprite(0,0).makeGraphic(FlxG.width, FlxG.height, 0xffFFFAE1);
        var topBar:FlxSprite = new FlxSprite(0,0).makeGraphic(FlxG.width, 48, 0xff000000);

        var topBarEdge:FlxSprite = new FlxSprite(0,0);
        topBarEdge.frames = Paths.getSparrowAtlas("modmenu/topBar");
        topBarEdge.animation.addByPrefix("idle", "bar", 24, true);
        topBarEdge.animation.play("idle");
        topBarEdge.x = FlxG.width - topBarEdge.width;

        var topBarBubbles:FlxSprite = new FlxSprite(0,0);
        topBarBubbles.frames = Paths.getSparrowAtlas("modmenu/topBar");
        topBarBubbles.animation.addByPrefix("idle", "bubbles", 24, true);
        topBarBubbles.animation.play("idle");
        topBarBubbles.x = FlxG.width - topBarBubbles.width;

        swirlBig = new FlxSprite(0,0).loadGraphic(Paths.image("modmenu/swirlBig"));
        swirlMini = new FlxSprite(0,0).loadGraphic(Paths.image("modmenu/swirlMini"));

        swirlBig.setPosition(FlxG.width - swirlBig.width, (FlxG.height - swirlBig.height)/2);
        swirlMini.setPosition(swirlBig.x + (swirlBig.width - swirlMini.width)/2, swirlBig.y + (swirlBig.height - swirlMini.height)/2);

        scrollingElementsTop = new FlxTiledSprite(Paths.image("modmenu/scrollingElementsMerged"), FlxG.width*1.5, 275, true, false);
        scrollingElementsMiddle = new FlxTiledSprite(Paths.image("modmenu/scrollingElementsMerged"), FlxG.width*1.5, 275, true, false);
        scrollingElementsBottom = new FlxTiledSprite(Paths.image("modmenu/scrollingElementsMerged"), FlxG.width*1.5, 275, true, false);

        for(scrollingElement in [scrollingElementsTop, scrollingElementsMiddle, scrollingElementsBottom])
        {
            scrollingElement.screenCenter();
            scrollingElement.scrollX = 275*FlxG.random.int(0, FlxG.width*5);
        }

        scrollingElementsTop.y -= 275;
        scrollingElementsBottom.y += 275;

        characterPortrait = new CharacterPortrait();

        modCasesGroup = new FlxTypedSpriteGroup(0,300,0);

        poofSprite = new FlxSprite(0,0);
        poofSprite.frames = Paths.getSparrowAtlas("modmenu/smokePuff");
        poofSprite.animation.addByPrefix("poof", "explosion", 24, false);
        poofSprite.animation.play("poof");
        poofSprite.animation.onFinish.add(()->{ poofSprite.visible = false; });
        poofSprite.animation.onFrameChange.add((name, frame)->{
            if(frame == 1)
            {
                poofSprite.visible = true;
                characterPortrait.shader.brightness = 100;
                characterPortrait.shader.contrast = 100;
            }
            if(frame == 3)
            {
                characterPortrait.initRandomCharacter();
                characterPortrait.shader.brightness = 0;
                characterPortrait.shader.contrast = 0;
            }
        });
        poofSprite.setPosition(FlxG.width - poofSprite.width, FlxG.height - poofSprite.height);

        for(object in [colorBg, swirlBig, swirlMini, scrollingElementsTop, scrollingElementsMiddle, scrollingElementsBottom, characterPortrait, poofSprite, modCasesGroup, topBar, topBarEdge, topBarBubbles])
        {
            add(object);
        }

        for(object in [swirlBig, swirlMini])
        {
            object.shader = new AdjustColorShader();
        }

        for(mod in ModMenuUtils.detectedMods)
        {
            var modCase = new ModCase(0, 150*ModMenuUtils.detectedMods.indexOf(mod), mod);
            modCasesGroup.add(modCase);
        }

        if(FlxG.onMobile)
            addBackButton(0, 0, 0xffFFFFFF, ()->{
                var targetState:NextState = ScriptedMusicBeatState.init('ModLoadingState');
                targetState.scriptSet("transitionToTitleScreen", false);
                trace(targetState.scriptGet("transitionToTitleScreen"));
                FlxG.switchState(targetState);
                FlxTransitionableState.skipNextTransIn = true;
                FlxTransitionableState.skipNextTransOut = true;
            }, 0.75);

        scrollMenu();
	}

    override function update(elapsed:Float):Void
    {
        super.update(elapsed);

        swirlBig.angle += 0.25;
        swirlMini.angle -= 0.5;
        swirlBig.shader.hue += 1;
        swirlMini.shader.hue -= 1;

        scrollingElementsTop.scrollX -= elapsed*150;
        scrollingElementsMiddle.scrollX += elapsed*150;
        scrollingElementsBottom.scrollX -= elapsed*150;

        if( (controls.ACCEPT && !FlxG.keys.pressed.SHIFT) || (FlxG.onMobile && TouchUtil.pressAction(modCasesGroup.members[curSelected])) )
        {
            if(ModMenuUtils.isModMissingDependencies(modCasesGroup.members[curSelected].metadata))
            {
                FunkinSound.playOnce(Paths.sound('missnote1'));
                HapticUtil.vibrate(Constants.DEFAULT_VIBRATION_PERIOD, Constants.DEFAULT_VIBRATION_DURATION, Constants.DEFAULT_VIBRATION_AMPLITUDE, 4);
            }
            else if(ModMenuUtils.isModFavorited(modCasesGroup.members[curSelected].metadata) || modCasesGroup.members[curSelected].metadata.id == ModMenuUtils.modMenuID)
            {
                FunkinSound.playOnce(Paths.sound('CS_locked'));
                characterPortrait.playAnimCallback("locked");
                HapticUtil.vibrate(Constants.DEFAULT_VIBRATION_PERIOD, Constants.DEFAULT_VIBRATION_DURATION, Constants.DEFAULT_VIBRATION_AMPLITUDE, 4);
            }
            else
            {
                modCasesGroup.members[curSelected].toggleMod();
                characterPortrait.playAnimCallback((ModMenuUtils.isModEnabled(modCasesGroup.members[curSelected].metadata)) ? "enable":"disable");
                HapticUtil.vibrate();
            }
        }
        if( (controls.FREEPLAY_FAVORITE || (controls.ACCEPT && FlxG.keys.pressed.SHIFT)) || (FlxG.onMobile && TouchUtil.overlapsComplex(modCasesGroup.members[curSelected]) && TouchUtil.touch.ticksDeltaSincePress >= 500))
        {
            modCasesGroup.members[curSelected].toggleFavorite();
            characterPortrait.playAnimCallback((ModMenuUtils.isModFavorited(modCasesGroup.members[curSelected].metadata)) ? "favorite":"unfavorite");
            if(FlxG.onMobile)
                TouchUtil.touch.recycle();
        }
        if(controls.UI_UP_P)
        {
            scrollMenu(-1);
        }
        if(controls.UI_DOWN_P)
        {
            scrollMenu(1);
        }
        if(controls.RESET)
        {
            poofSprite.animation.play("poof");
        }
    }

    function scrollMenu(scroll:Int = 0)
    {
        modCasesGroup.members[curSelected].caseSprite.animation.play("dim");
        curSelected = FlxMath.wrap(curSelected + scroll, 0, modCasesGroup.length-1);
        modCasesGroup.members[curSelected].caseSprite.animation.play("idle");
        if(scroll != 0)
        {
            FunkinSound.playOnce(Paths.sound('scrollMenu'));
            FlxTween.cancelTweensOf(modCasesGroup);
            FlxTween.tween(modCasesGroup, { y: 300 - 150*curSelected }, 0.5, { ease: FlxEase.expoOut });
            for(modCase in modCasesGroup.members)
            {
                FlxTween.cancelTweensOf(modCase);
                FlxTween.tween(modCase, { x: -60 * Math.sin(modCasesGroup.members.indexOf(modCase) - curSelected - 2) - 55 }, 0.5, { ease: FlxEase.expoOut });
            }
        }
    }
}
