import funkin.data.DataParse;
import funkin.graphics.FunkinSprite;
import funkin.graphics.shaders.AdjustColorShader;
import funkin.modding.PolymodHandler;
import funkin.modding.base.ScriptedFlxSpriteGroup;
import funkin.util.assets.DataAssets;

import flixel.FlxG;
import flixel.FlxSprite;
import flixel.addons.effects.FlxSkewedSprite;
import flixel.graphics.FlxGraphic;
import flixel.math.FlxPoint;
import flixel.text.FlxText;
import flixel.text.FlxTextBorderStyle;
import flixel.tweens.FlxEase;
import flixel.tweens.FlxTween;
import flixel.util.FlxTimer;

import haxe.Unserializer;

import hxjsonast.Parser;
import hxjsonast.Tools;

import openfl.display.BitmapData;

import polymod.Polymod;

import StringTools;

class ModMenuScrollingElements extends ScriptedFlxSpriteGroup {

  var elements = [
    "bfshirt",
    "divide",
    "spanner",
    "blob",
    "headphones",
    "angledArrow",
    "straightArrow",
    "brush"
  ];

  var direction:Bool = true;

	public function new(?_direction:Bool = true)
  {
		super("ModMenuScrollingElements");
    direction = _direction;
    var randomElements = elements;
    for(item in 0...7) {
      var randomElement = randomElements[FlxG.random.int(0, randomElements.length-1)];
      randomElements.remove(randomElement);
      // trace(randomElement);
      elementSprite = new FlxSprite(300*item,0);
      elementSprite.frames = Paths.getSparrowAtlas("modmenu/scrollingElements");
      elementSprite.animation.addByPrefix("idle", randomElement, 24, true);
      add(elementSprite);
      elementSprite.animation.play("idle");
    }
	}

  override function update(elapsed:Float):Void
  {
    super.update(elapsed);
    for(item in 0...7) {
      if(direction) {
        this.members[item].x += 2;
        if(this.members[item].x > FlxG.width*1.5) this.members[item].x = -this.members[item].width;
      }
      else {
        this.members[item].x -= 2;
        if(this.members[item].x < -this.members[item].width) this.members[item].x = FlxG.width*1.5;
      }
    }
  }
}
